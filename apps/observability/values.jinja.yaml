kube-prometheus-stack:
  defaultRules:
    rules:
      kubeProxy: false
  grafana:
    enabled: {{ grafana_enabled }}
    persistence:
      type: pvc
      enabled: {{ we_have_storage }}
      storageClassName: ceph-block
      accessModes:
        - ReadWriteOnce
      size: 10Gi
    adminUser: {{ admin_user }}
    adminPassword: {{ admin_pass }}
    rbac:
      pspEnabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-gcp
        external-dns.alpha.kubernetes.io/hostname: {{ grafana_fqdn }}
        nginx.ingress.kubernetes.io/auth-url: https://{{ oauth_fqdn }}/oauth2/auth
        nginx.ingress.kubernetes.io/auth-signin: https://{{ oauth_fqdn }}/oauth2/start
        nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-access-token"
      hosts:
        - {{ grafana_fqdn }}
      tls:
        - secretName: tls.{{ grafana_fqdn }}
          hosts:
            - {{ grafana_fqdn }}
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        {% for satellite in satellites %}
        - name: {{ satellite.name }}Prometheus
          uid: {{ satellite.name }}Prometheus
          type: prometheus
          url: http://obs-{{ satellite.name|truncate(4, True, '', 0) }}-kube-prometheus-s-prometheus.observability:9090
        {% endfor %}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: ceph
          orgId: 1
          folder: ceph
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/ceph
        {% for satellite in satellites %}
        - name: ceph-{{ satellite.name }}
          orgId: 1
          folder: ceph-{{ satellite.name }}
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/ceph_{{ satellite.name }}
        {% endfor %}
    dashboards:
      {% for dashboard in dashboards %}
      ceph-{{ dashboard['name'] }}:
        rgw:
          json: |
            {{ dashboard['rgw'] | indent(12) }}
        cluster:
          json: |
            {{ dashboard['cluster'] | indent(12) }}
        pools:
          json: |
            {{ dashboard['pools'] | indent(12) }}
      {% endfor %}
  kubeProxy:
    enabled: false
  prometheus:
    enabled: true
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      {% if we_have_storage %}
      storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
      {% else %}
      storageSpec: {}
      {% endif %}
    service:
      annotations:
        {% if workload_cluster %}
        io.cilium/global-service: 'true'
        {% endif %}