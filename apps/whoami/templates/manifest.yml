kind: Deployment
apiVersion: apps/v1
metadata:
  name: whoami
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whoami-app
  template:
    metadata:
      labels:
        app: whoami-app
    spec:
      containers:
        - name: whoami
          image: traefik/whoami:v1.10.1
          env:
            - name: WHOAMI_NAME
              value: {{ .Values.test_app.name }}
          ports:
            - containerPort: 80
              name: whoami-app-port

---
apiVersion: v1
kind: Service
metadata:
  name: whoami-local
  namespace: {{ .Release.Namespace }}
  annotations:
    io.cilium/global-service: 'false'
    service.cilium.io/affinity: "local"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: whoami-app-port
  selector:
    app: whoami-app

---
apiVersion: v1
kind: Service
metadata:
  name: whoami-remote
  namespace: {{ .Release.Namespace }}
  annotations:
    io.cilium/global-service: 'true'
    service.cilium.io/affinity: "remote"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: whoami-app-port
  selector:
    app: whoami-app

---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: api-only-for-remotes
  namespace: {{ .Release.Namespace }}
spec:
  description: Only allow remote debug pods to access /api endpoint
  endpointSelector:
    matchLabels:
      app: whoami-app
      io.cilium.k8s.policy.cluster: titan
  ingress:
    - fromEndpoints:
      - matchLabels:
          name: debug
          io.kubernetes.pod.namespace: network-services
          io.cilium.k8s.policy.cluster: rhea
      toPorts:
      - ports:
        - port: "80"
          protocol: TCP
        rules:
          http:
          - method: "GET"
            path: "/api"
---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  name: root-only-for-locals
  namespace: {{ .Release.Namespace }}
spec:
  description: Only allow local debug pods to access /
  endpointSelector:
    matchLabels:
      app: whoami-app
  ingress:
    - fromEndpoints:
      - matchLabels:
          name: debug
          io.kubernetes.pod.namespace: network-services
      toPorts:
      - ports:
        - port: "80"
          protocol: TCP
        rules:
          http:
          - method: "GET"
            path: "/"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-gcp
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.test_app.fqdn }}
    {{- if .Values.test_app.oauth.enabled }}
    nginx.ingress.kubernetes.io/auth-url: {{ .Values.test_app.oauth.fqdn }}/oauth2/auth
    nginx.ingress.kubernetes.io/auth-signin: {{ .Values.test_app.oauth.fqdn }}/oauth2/start
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user, x-auth-request-email, x-auth-request-access-token"
    {{- end }}
  name: whoami
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: {{ .Values.test_app.ingressClassName }}
  rules:
    - host: {{ .Values.test_app.fqdn }}
      http:
        paths:
          - backend:
              service:
                name: whoami-local
                port:
                  name: http
            path: /
            pathType: Prefix
          - backend:
              service:
                name: whoami-remote
                port:
                  name: http
            path: /remote
            pathType: Prefix
  tls:
    - hosts:
        - {{ .Values.test_app.fqdn }}
      secretName: tls.{{ .Values.test_app.fqdn }}

